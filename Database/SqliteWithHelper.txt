<?xml version="1.0" encoding="utf-8"?>
    <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity"
    android:orientation="vertical"
    android:gravity="center">

    <EditText

        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="NAME"
        android:layout_gravity="center"
        android:id="@+id/name"
        />

    <EditText

        android:layout_gravity="center"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="SURNAME"
        android:id="@+id/surname"
        />

    <EditText

        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="SALARY"
        android:layout_gravity="center"
        android:id="@+id/marks"
        />

    <EditText

        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="ID"
        android:layout_gravity="center"
        android:id="@+id/editid"
        />

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center"
        android:id="@+id/btnAdd"
        android:text="ADD"/>

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center"
        android:id="@+id/btnViewall"
        android:text="View All" />

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center"
        android:id="@+id/btnUpdate"
        android:text="UPDATE" />

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center"
        android:id="@+id/btnDelete"
        android:text="Delete" />



</LinearLayout>


--------------------------------------------------------------------------------

package com.example.mytimepass;

import androidx.appcompat.app.AppCompatActivity;

import android.app.AlertDialog;
import android.database.Cursor;
import android.os.Bundle;
import android.os.Message;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;


public class MainActivity extends AppCompatActivity {

    Button btnAdd,btnViewall,btnUpdate,btnDelete;
    EditText name,surname,marks,editid;
    --------DatabaseHelperClass myDB;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        myDB = new DatabaseHelperClass(this);
        name=(EditText)findViewById(R.id.name);
        surname=(EditText)findViewById(R.id.surname);
        marks=(EditText)findViewById(R.id.marks);
        editid = (EditText)findViewById(R.id.editid);
        btnAdd=(Button)findViewById(R.id.btnAdd);
        btnViewall=(Button)findViewById(R.id.btnViewall);
        btnUpdate = (Button)findViewById(R.id.btnUpdate);
        btnDelete = (Button)findViewById(R.id.btnDelete);

        btnAdd.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                --------boolean isInserted = myDB.insertData(name.getText().toString(),surname.getText().toString(),marks.getText().toString());
                if(isInserted==true){
                    Toast.makeText(MainActivity.this,"DATA INSERTED",Toast.LENGTH_SHORT).show();
                }
                else {
                    Toast.makeText(MainActivity.this,"DATA NOT INSERTED",Toast.LENGTH_SHORT).show();
                }
            }
        });

        btnViewall.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                --------Cursor result =myDB.getAllData();
                if(result.getCount()==0){
                    showMessage("Error","Nothing Found");
                    return;
                }
                StringBuffer buffer = new StringBuffer();
                while(result.moveToNext()){
                    buffer.append("ID :"+ result.getString(0)+"\n");
                    buffer.append("NAME :"+ result.getString(1)+"\n");
                    buffer.append("SURNAME :"+ result.getString(2)+"\n");
                    buffer.append("MARKS :"+ result.getString(3)+"\n\n\n");
                }
                showMessage("DATA",buffer.toString());
            }
        });

        btnUpdate.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                --------boolean isUpdated = myDB.updateData(editid.getText().toString(),name.getText().toString(),surname.getText().toString(),marks.getText().toString());
                if(isUpdated==true){
                    Toast.makeText(MainActivity.this,"DATA UPDATED",Toast.LENGTH_SHORT).show();
                }
                else {
                Toast.makeText(MainActivity.this,"DATA NOT UPDATED",Toast.LENGTH_SHORT).show();
            }
            }
        });

        btnDelete.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                --------Integer deletedRows = myDB.deleteData(editid.getText().toString());
                if(deletedRows>0){
                    Toast.makeText(MainActivity.this,"DATA DELETED",Toast.LENGTH_SHORT).show();
                }
                else {
                    Toast.makeText(MainActivity.this,"DATA NOT DELETED",Toast.LENGTH_SHORT).show();
                }
            }
        });

    }
    public void showMessage(String title, String message){
        AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);
        builder.setCancelable(true);
        builder.setTitle(title);
        builder.setMessage(message);
        builder.show();
    }
}


---------------------------------------------------------------------------

package com.example.mytimepass;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

public class DatabaseHelperClass extends SQLiteOpenHelper {

    private static final String DATABASE_NAME = "Employee.db";
    private static final String TABLE_NAME = "Employee_Table";
    private static final String q1 = "CREATE TABLE "+ TABLE_NAME+ " (ID INTEGER PRIMARY KEY AUTOINCREMENT , NAME TEXT , SURNAME TEXT , MARKS INTEGER)";
    private static final String q2 = "DROP TABLE IF EXISTS "+ TABLE_NAME ;

    public DatabaseHelperClass(Context context) {
        super(context,DATABASE_NAME,null,1);

    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        db.execSQL(q1);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int i, int i1) {
        db.execSQL(q2);
        onCreate(db);
    }

    public boolean insertData(String name,String surname, String marks){
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues contentValues = new ContentValues();
        contentValues.put("NAME",name);
        contentValues.put("SURNAME",surname);
        contentValues.put("MARKS",marks);
        long result = db.insert(TABLE_NAME,null,contentValues);
        if(result==-1){
            return false;
        }
        else{
            return true;
        }
    }

    public Cursor getAllData(){
        SQLiteDatabase db = this.getWritableDatabase();
        Cursor result = db.rawQuery("select * from "+TABLE_NAME,null);
        return result;
    }

    public boolean updateData(String id,String name,String surname, String marks){
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues contentValues = new ContentValues();
        contentValues.put("ID",id);
        contentValues.put("NAME",name);
        contentValues.put("SURNAME",surname);
        contentValues.put("MARKS",marks);
        db.update(TABLE_NAME, contentValues, "ID = ?",new String[]{id});
        return true;
    }

    public Integer deleteData(String id){
        SQLiteDatabase db = this.getWritableDatabase();
        return db.delete(TABLE_NAME,"ID = ?",new String[]{id});
    }
}
